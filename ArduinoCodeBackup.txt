// generated by mBlock5 for mBot Ranger
// codes make you happy

#include <Arduino.h>
#include <Wire.h>
#include <SoftwareSerial.h>
#include <MeAuriga.h>

MeLineFollower linefollower_6(6);
MeRGBLed rgbled_0(0, 12);
MeUltrasonicSensor ultrasonic_7(7);
MeEncoderOnBoard Encoder_1(SLOT1);
MeEncoderOnBoard Encoder_2(SLOT2);
void isr_process_encoder1(void)
{
  if(digitalRead(Encoder_1.getPortB()) == 0){
    Encoder_1.pulsePosMinus();
  }else{
    Encoder_1.pulsePosPlus();
  }
}
void isr_process_encoder2(void)
{
  if(digitalRead(Encoder_2.getPortB()) == 0){
    Encoder_2.pulsePosMinus();
  }else{
    Encoder_2.pulsePosPlus();
  }
}
void move(int direction, int speed)
{
  int leftSpeed = 0;
  int rightSpeed = 0;
  if(direction == 1){
    leftSpeed = -speed;
    rightSpeed = speed;
  }else if(direction == 2){
    leftSpeed = speed;
    rightSpeed = -speed;
  }else if(direction == 3){
    leftSpeed = -speed;
    rightSpeed = -speed;
  }else if(direction == 4){
    leftSpeed = speed;
    rightSpeed = speed;
  }
  Encoder_1.setTarPWM(leftSpeed);
  Encoder_2.setTarPWM(rightSpeed);
}

//VALUES FOR AI
int lightSensorValue;
int sonicSensorValue;
bool mainLoopFlag = true;

void serialWrite(bool isCross){
  Serial.print(lightSensorValue);
  (sonicSensorValue<16) ?
  Serial.print(sonicSensorValue, HEX) :
  Serial.print(15, HEX);
  if(isCross)
    Serial.print(1, DEC);
  else
    Serial.print(0, DEC); 
}

void serialRead(){
  if (Serial.available() > 0) {
    // read the incoming byte:
    int incomingByte = Serial.read();

    // say what you got:
    rgbled_0.setColor(0,#ffffff);
          rgbled_0.show();
          mainLoopFlag = true;
  }
}

void _delay(float seconds) {
  long endTime = millis() + seconds * 1000;
  while(millis() < endTime) _loop();
}

void setup() {
  TCCR1A = _BV(WGM10);
  TCCR1B = _BV(CS11) | _BV(WGM12);
  TCCR2A = _BV(WGM21) | _BV(WGM20);
  TCCR2B = _BV(CS21);
  attachInterrupt(Encoder_1.getIntNum(), isr_process_encoder1, RISING);
  attachInterrupt(Encoder_2.getIntNum(), isr_process_encoder2, RISING);
  rgbled_0.setpin(44);
  Serial.begin(9600);
  while(1) {
    if(mainLoopFlag){
    lightSensorValue = linefollower_6.readSensors();
    sonicSensorValue = ultrasonic_7.distanceCm();
      if(lightSensorValue == 0.000000){
          rgbled_0.setColor(0,#000000);
          rgbled_0.show();
          move(1,40/100.0*255);

      }else{
          if(lightSensorValue == 1.000000){
            rgbled_0.setColor(0,#000000);
            rgbled_0.show();
            move(3,40/100.0*255);
          }else{
              if(lightSensorValue == 2.000000){
                rgbled_0.setColor(0,#000000);
                rgbled_0.show();
                move(4,40/100.0*255);
              }else{
                  mainLoopFlag = false;
                  serialWrite(true);
                  Encoder_1.setTarPWM(0);
                  Encoder_2.setTarPWM(0);

              }

          }

      }
      if(sonicSensorValue < 16){
        
      }

      //_delay(1);
    }
    else{

    }
    _loop();
  }

}

void _loop() {
  serialWrite(false);
  Encoder_1.loop();
  Encoder_2.loop();
}

void loop() {
  _loop();
}

